#!/bin/bash
#Purpose:To provide test cases to test the durability of the program 
#Input:bash commands to test words program
#Output:output of words program 
#Name: Garrett Wellens cs50 25f

#test empty input
echo | ./words 


#test a non alpha input
echo "1 2 3 4 5 ^ ** $) (2343)" | ./words


#test input with punctuation
echo "Hello my name is Garrett, nice to meet you!!" | ./words

Hello
my
name
is
Garrett
nice
to
meet
you

#test reasonable input
echo "I cannot believe it" | ./words

I
cannot
believe
it

#test weirdly placed non alpha chars stuff 
echo "Hello123*#&$ dogs cats7cating" | ./words 

Hello
dogs
cats
cating

#testing large file
./words text.txt

Input
is
read
from
stdin
whether
from
the
keyboard
redirected
from
a
file
or
piped
in
from
another
command
Assume
the
input
contains
only
integers
separated
by
white
space
space
tab
newline
Assume
the
smallest
integer
is
zero
ignore
any
negative
integers

#testing two files
./words words.txt words-tx.txt

here
are
some
words



#testing unopenable file
./words wellens.txt

what
your
test
does
hi
world
#testing mixed file
./words words.c

words
c
Garrett
Wellens
f
Purpose
To
create
a
program
which
takes
in
a
file
or
standard
input
and
outputs
each
word
in
the
file
line
by
line
Input
Can
take
any
number
of
arguments
if
no
argument
standard
input
if
follows
file
looks
at
file
and
then
takes
standard
input
Output
from
input
file
or
standard
input
outputs
with
each
word
on
a
seperate
line
Functions
processFile
proccesses
file
and
outputs
line
by
line
words
of
file
checkFile
boolean
function
that
checks
if
file
is
readable
include
stdio
h
include
stdlib
h
include
math
h
include
stdbool
h
include
ctype
h
include
string
h
void
processFile
const
char
filename
bool
checkFile
const
char
filename
int
main
int
argc
char
argv
if
argc
strcmp
argv
checks
if
no
argument
or
to
use
stdin
processFile
NULL
processes
with
standard
input
else
for
int
i
i
argc
i
parses
through
each
argument
if
strcmp
argv
i
checks
if
argument
is
followed
by
dash
stdin
processFile
NULL
processes
with
standard
input
else
if
checkFile
argv
i
if
readable
file
processFile
argv
i
process
file
else
fprintf
stderr
s
could
not
open
file
argv
i
standard
error
unopenable
file
return
error
return
success
return
processFile
takes
one
argument
of
a
character
pointer
to
a
filename
processFile
checks
if
NULL
or
is
a
file
if
a
file
will
take
stdin
else
it
will
read
the
file
and
output
each
word
to
an
individual
line
void
processFile
const
char
filename
FILE
fp
creates
FILE
pointer
int
c
used
for
outputting
words
if
filename
NULL
checks
if
file
name
is
null
fp
stdin
takes
input
from
stdin
else
fp
fopen
filename
r
opens
file
if
fp
NULL
checks
if
NULL
fprintf
stderr
s
could
not
open
file
n
filename
standard
error
while
feof
fp
continues
parsing
through
file
until
EOF
if
isalpha
c
checks
if
letter
putchar
c
c
fgetc
fp
else
if
non
letter
printf
n
go
to
next
line
while
isalpha
c
if
feof
fp
printf
n
return
c
fgetc
fp
if
filename
NULL
checks
if
non
NULL
file
close
fclose
fp
closes
file
printf
n
checkFile
is
a
boolean
function
that
checks
if
a
file
is
readable
if
it
is
not
used
to
display
error
takes
parameter
of
filename
bool
checkFile
const
char
filename
FILE
fp
fopen
filename
r
opens
file
if
fp
NULL
if
not
readable
return
false
else
fclose
fp
closes
file
return
true

